package club.banyuan.view;

import club.banyuan.pojo.Question;
import club.banyuan.service.Impl.RandomSubjectImpl;
import club.banyuan.service.RandomSubject;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public class TestMultiple extends javax.swing.JFrame {

    /**
     * Creates new form Test
     */
    /*调用题目*/
     RandomSubject randomSubject = new RandomSubjectImpl();
    static ArrayList<Integer> trueAnswerM = new ArrayList<>();


    public TestMultiple() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        this.enableEvents(AWTEvent.WINDOW_FOCUS_EVENT_MASK);
        List<Question> questions = randomSubject.getTenQuestions(TestReady.subject,1,4);
        for (int i = 0; i < 4; i++) {
            mapMultipleQuesion.put(i+7,questions.get(i).getQuestionText());
            trueAnswerM.add(questions.get(i).getOpt());
        }
        jTextArea1.setText((String) mapMultipleQuesion.get(TestSingle.count));
        }





    static TestMultiple testmultiple;

    @Override
    protected void processWindowEvent(WindowEvent e) {
        if (e.getID()==WindowEvent.WINDOW_CLOSING)
            return;
        super.processWindowEvent(e);
    }





    static Map<Integer,String> mapMultipleQuesion=new TreeMap();
    static Map<Integer ,String> mapMultipleAnswer=new TreeMap();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        optionA = new javax.swing.JRadioButton();
        optionB = new javax.swing.JRadioButton();
        optionC = new javax.swing.JRadioButton();
        optionD = new javax.swing.JRadioButton();
        slogan = new javax.swing.JLabel();
        singleTest = new javax.swing.JLabel();
        nextSubject = new javax.swing.JButton();
        lastSubject = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        optionA.setText("A");
        optionA.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                optionAActionPerformed(evt);
            }
        });

        optionB.setText("B");
        optionB.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                optionBActionPerformed(evt);
            }
        });

        optionC.setText("C");

        optionD.setText("D");

        slogan.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        slogan.setText("---半圆学社严打考试作弊");

        singleTest.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        singleTest.setText("多选题");

        nextSubject.setText("下一题");
        nextSubject.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String temp="";
                    if (optionA.isSelected()) {
                        temp=temp+"A";
                        mapMultipleAnswer.put(TestSingle.count, temp);
                        optionA.setSelected(false);
                    }
                    if (optionB.isSelected()) {
                        temp=temp+"B";
                        mapMultipleAnswer.put(TestSingle.count, temp);
                        optionB.setSelected(false);
                    }
                    if (optionC.isSelected()) {
                        temp=temp+"C";
                        mapMultipleAnswer.put(TestSingle.count, temp);
                        optionC.setSelected(false);
                    }
                    if (optionD.isSelected()) {
                        temp=temp+"D";
                        mapMultipleAnswer.put(TestSingle.count, temp);
                        optionD.setSelected(false);
                    }
//                    optionA.isOpaque();
//                    optionA.setSelected(false);
//                    optionB.setSelected(true);
//                    optionC.setSelected(true);
//                    optionD.setSelected(true);
                    TestSingle.count++;
                    jTextArea1.setText((String) mapMultipleQuesion.get(TestSingle.count));
                    System.out.println(TestSingle.count);
                if (TestSingle.count == 11) {
                    setVisible(false);
                    JOptionPane.showMessageDialog(new JLabel(),"考试结束");
                    StudentUI.stuStart();
                    TestSingle.count=1;
                }else if (mapMultipleAnswer.containsKey(TestSingle.count)) {
                        if (String.valueOf(mapMultipleAnswer.get(TestSingle.count)).contains("A")) {
                            optionA.setSelected(true);
                        }
                        if (String.valueOf(mapMultipleAnswer.get(TestSingle.count)).contains("B")) {
                            optionB.setSelected(true);
                        }
                        if (String.valueOf(mapMultipleAnswer.get(TestSingle.count)).contains("C")) {
                            optionC.setSelected(true);
                        }
                        if (String.valueOf(mapMultipleAnswer.get(TestSingle.count)).contains("D")) {
                            optionD.setSelected(true);
                        }

                    }


                }
        });

        lastSubject.setText("上一题");
        lastSubject.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (TestSingle.count >=8) {
                    TestSingle.count--;
                    jTextArea1.setText((String) mapMultipleQuesion.get(TestSingle.count));
                    if (mapMultipleAnswer.containsKey(TestSingle.count)) {
                        if (String.valueOf(mapMultipleAnswer.get(TestSingle.count)).contains("A")) {
                            optionA.setSelected(true);
                        }
                        if (String.valueOf(mapMultipleAnswer.get(TestSingle.count)).contains("B")) {
                            optionB.setSelected(true);
                        }
                        if (String.valueOf(mapMultipleAnswer.get(TestSingle.count)).contains("C")) {
                            optionC.setSelected(true);
                        }
                        if (String.valueOf(mapMultipleAnswer.get(TestSingle.count)).contains("D")) {
                            optionD.setSelected(true);
                        }
                    }
                }else {
                    TestSingle.TestSingleStart();
                    setVisible(false);
                    TestSingle.count--;
                }
            }
        });



        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setCaretPosition(0);
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(107, 107, 107)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(optionA)
                                                                .addGap(74, 74, 74)
                                                                .addComponent(optionB)
                                                                .addGap(72, 72, 72)
                                                                .addComponent(optionC)
                                                                .addGap(52, 52, 52))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(lastSubject)
                                                                .addGap(26, 26, 26)
                                                                .addComponent(nextSubject)
                                                                .addGap(29, 29, 29)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(slogan, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(11, 11, 11)
                                                                .addComponent(optionD))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(singleTest, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(10, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)

        ));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()

                                .addGap(18, 18, 18)
                                .addComponent(singleTest, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(optionA)
                                        .addComponent(optionB)
                                        .addComponent(optionC)
                                        .addComponent(optionD))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addComponent(slogan, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(lastSubject)
                                                        .addComponent(nextSubject))))
                                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>

    private void optionAActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void optionBActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     */
    public static void TestMultupleStart() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestMultiple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestMultiple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestMultiple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestMultiple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (testmultiple==null){
                    synchronized (TestMultiple.class) {
                        if (testmultiple == null) {
                            testmultiple = new TestMultiple();
                            testmultiple.setVisible(true);
                        }
                    }
                }else {
                    testmultiple.setVisible(true);
                }
                System.out.println("hahha");

            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton lastSubject;
    private javax.swing.JButton nextSubject;
    private javax.swing.JRadioButton optionA;
    private javax.swing.JRadioButton optionB;
    private javax.swing.JRadioButton optionC;
    private javax.swing.JRadioButton optionD;
    private javax.swing.JLabel singleTest;
    private javax.swing.JLabel slogan;
    // End of variables declaration
}
